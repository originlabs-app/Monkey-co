{
  "root": true,
  "env": {
    "browser": true,
    "es2022": true,
    "node": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended-type-checked",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:jsx-a11y/recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module",
    "project": ["./tsconfig.json"],
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "plugins": [
    "@typescript-eslint",
    "react",
    "react-hooks",
    "jsx-a11y",
    "import"
  ],
  "settings": {
    "react": {
      "version": "detect"
    },
    "import/resolver": {
      "typescript": {
        "alwaysTryTypes": true
      }
    }
  },
  "rules": {
    // Interdictions strictes
    "no-console": "error",
    "@typescript-eslint/no-explicit-any": ["error", {
      "ignoreRestArgs": false
    }],
    
    // Qualité du code
    "complexity": ["error", 10],
    "max-lines": ["error", {
      "max": 300,
      "skipBlankLines": true,
      "skipComments": true
    }],
    "max-lines-per-function": ["error", {
      "max": 50,
      "skipBlankLines": true,
      "skipComments": true
    }],
    "max-params": ["error", 4],
    "max-depth": ["error", 4],
    
    // TypeScript strict
    "@typescript-eslint/explicit-function-return-type": ["error", {
      "allowExpressions": true,
      "allowTypedFunctionExpressions": true
    }],
    "@typescript-eslint/no-unused-vars": ["error", {
      "argsIgnorePattern": "^_",
      "varsIgnorePattern": "^_"
    }],
    "@typescript-eslint/no-floating-promises": "error",
    "@typescript-eslint/no-misused-promises": "error",
    "@typescript-eslint/await-thenable": "error",
    
    // Imports
    "import/no-relative-parent-imports": "error",
    "import/order": ["error", {
      "groups": [
        "builtin",
        "external",
        "internal",
        ["parent", "sibling"],
        "index"
      ],
      "newlines-between": "always",
      "alphabetize": {
        "order": "asc",
        "caseInsensitive": true
      }
    }],
    
    // React
    "react/prop-types": "error",
    "react/jsx-no-hardcoded-strings": ["error", {
      "allowedStrings": ["&", "|", "/", "-", "+", "="],
      "ignoreProps": false
    }],
    "react/jsx-no-useless-fragment": "error",
    "react/self-closing-comp": "error",
    
    // Accessibilité
    "jsx-a11y/alt-text": "error",
    "jsx-a11y/anchor-is-valid": "error",
    "jsx-a11y/label-has-associated-control": "error"
  },
  "overrides": [
    {
      "files": ["*.stories.tsx", "*.test.tsx", "*.test.ts"],
      "rules": {
        "max-lines-per-function": "off",
        "react/jsx-no-hardcoded-strings": "off"
      }
    },
    {
      "files": ["src/icons/**/*.tsx"],
      "rules": {
        // Temporaire pour les icônes générées
        "@typescript-eslint/no-explicit-any": ["error", {
          "ignoreRestArgs": false,
          "fixToUnknown": false
        }]
      }
    }
  ]
}